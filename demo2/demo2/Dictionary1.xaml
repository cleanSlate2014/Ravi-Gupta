<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lib="clr-namespace:demo2"
                    x:Class="demo2.Dictionary1">
    
    <!--Tab Control-->
    <Style TargetType="TabItem">
        <!-- <EventSetter Event="TabItem.PreviewMouseLeftButtonDown" Handler="mouse_leftdown"></EventSetter>
        <EventSetter Event="TabItem.Loaded" Handler="TabItemLoaded"></EventSetter>
        <EventSetter Event="TabItem.MouseEnter" Handler="mouse_enter"/>
        <EventSetter Event="TabItem.MouseLeave" Handler="mouse_leave"/>-->
        <Setter Property="Background" Value="#333"/>
        <Setter Property="Height" Value="70"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="Background" Value="{Binding Path=Background,RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Loaded="BorderLoaded"  Width="{TemplateBinding Width}" Background="White" Height="{TemplateBinding Height}" BorderBrush="#FFE2E2E2" BorderThickness="0,0,1,0" CornerRadius="3" >
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >
                            <ContentPresenter  Content="{TemplateBinding Header}"  HorizontalAlignment="Center"  VerticalAlignment="Center" >
                                <TextBlock.FontFamily>
                                    Calibri
                                </TextBlock.FontFamily>
                                <TextBlock.FontSize>
                                    15
                                </TextBlock.FontSize>
                            </ContentPresenter>
                            <Border x:Name="childborder" CornerRadius="1" VerticalAlignment="Bottom" Margin="0,0,0,1"   HorizontalAlignment="Center"  Background="#FFdddcdc" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="childborder" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="childborder" Property="Background" Value="#eee"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>
    <Style TargetType="TabControl">
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <!--End-->
    
    
    <!--Panel-->
    <!--Style For Grid Container Start Here-->
    <Style x:Key="panel" TargetType="Grid">
        <Setter Property="Height" Value="92"></Setter>
        <Setter Property="Width" Value="500"></Setter>
    </Style>
    <!--Style For Grid Container End Here-->
    <!--Style For Heading Basic Start Here-->
    <Style TargetType="Label" x:Key="headingPanel">
        <Setter Property="Width" Value="500"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border Padding="8" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" CornerRadius="4,4,0,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <ContentPresenter VerticalAlignment="Center">

                            <TextBlock.FontSize>
                                16
                            </TextBlock.FontSize>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Style For Basic Default End Here-->
    <!--Style For Heading Danger Start Here-->
    <Style TargetType="Label" x:Key="headingPanelDanger" BasedOn="{StaticResource headingPanel}">
        <Setter Property="Background" Value="#f2dede"/>
        <Setter Property="BorderBrush" Value="#e49593"/>
    </Style>
    <!--Style For Heading Danger End Here-->
    <!--Style For Heading Success Start Here-->
    <Style TargetType="Label" x:Key="headingPanelSuccess" BasedOn="{StaticResource headingPanel}">
        <Setter Property="Background" Value="#dff0d8"/>
        <Setter Property="BorderBrush" Value="#8ed48e"/>
    </Style>
    <!--Style For Heading Success End Here-->
    <!--Style For Heading Info Start Here-->
    <Style TargetType="Label" x:Key="headingPanelInfo" BasedOn="{StaticResource headingPanel}">
        <Setter Property="Background" Value="#d9edf7"/>
        <Setter Property="BorderBrush" Value="#8bcadd"/>
    </Style>
    <!--Style For Heading Info End Here-->
    <!--Style For Heading Warning Start Here-->
    <Style TargetType="Label" x:Key="headingPanelWarning" BasedOn="{StaticResource headingPanel}">
        <Setter Property="Background" Value="#fcf8e3"/>
        <Setter Property="BorderBrush" Value="#efc283"/>
    </Style>
    <!--Style For Heading Warning End Here-->
    <!--Style For Heading Deefault Start Here-->
    <Style TargetType="Label" x:Key="headingPanelDefault" BasedOn="{StaticResource headingPanel}">
        <Setter Property="Background" Value="#eee"/>
        <Setter Property="BorderBrush" Value="#ccc"/>
    </Style>
    <!--Style For Heading Default End Here-->
    <!--Style For Text Default Start Here-->
    <Style TargetType="Label" x:Key="textPanel">
        <Setter Property="Width" Value="500"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border Padding="8" Background="White" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" CornerRadius="0,0,4,4" BorderBrush="#ccc" BorderThickness="1">
                        <ContentPresenter VerticalAlignment="Center">
                            <TextBlock.FontSize>
                                14
                            </TextBlock.FontSize>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Style For Text Default End Here-->
    <!-- Style For Text Panel Border Start Here -->
    <Style TargetType="Border" x:Key="textPanelBorder">
        <Setter Property="Width" Value="500"/>
        <Setter Property="Margin" Value="0,40,0,0" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Height" Value="50"/>

        <Setter Property="Height" Value="{Binding Path=Height, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Width" Value="{Binding Path=Width, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="BorderBrush" Value="#ccc"/>
        <Setter Property="CornerRadius" Value="0,0,4,4"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <!-- Style For Text Panel Border End Here -->
    <!--End-->
    
    
    <!--Password-->
    <Style x:Key="passwordbox" TargetType="{x:Type PasswordBox}">

        <Setter Property="Width" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid Width="{TemplateBinding Width}" Height="33">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Height="{TemplateBinding Height}"  Width="{TemplateBinding Width}" CornerRadius="3" Background="White" x:Name="border"  >
                            <Grid>
                                <PasswordBox  x:Name="textSource" Background="Transparent" Panel.ZIndex="2"  Height="{TemplateBinding Height}"  Width="{TemplateBinding Width}" BorderBrush="Transparent" BorderThickness="0" FontSize="15"  FontFamily="Segoe UI " Foreground="Gray" VerticalAlignment="Center" Focusable="True" />

                                <TextBox Text="{TemplateBinding Tag}" Background="Transparent" Panel.ZIndex="1" Height="{TemplateBinding Height}"  Width="{TemplateBinding Width}" BorderBrush="Transparent" BorderThickness="0" FontSize="14"  FontFamily="Segoe UI" VerticalAlignment="Center">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                    <Setter Property="Foreground" Value="DarkGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Style For TextBox  End Here-->
    <!--Style For TextBox Primary Start Here-->
    <Style TargetType="PasswordBox" BasedOn="{StaticResource passwordbox}" x:Key="passwordboxPrimary">
        <Setter Property="BorderBrush" Value="#428bca"/>
        <EventSetter Event="GotKeyboardFocus" Handler="gotFocusPrimary" />
        <EventSetter Event="LostKeyboardFocus" Handler="lostFocus" />

    </Style>
    <!--Style For TextBox Primary End Here-->
    <!-- Style For TextBox Of Success Start Here-->
    <Style TargetType="PasswordBox" BasedOn="{StaticResource passwordbox}" x:Key="passwordboxSuccess">
        <Setter Property="BorderBrush" Value="#5cb85c"/>
        <EventSetter Event="GotKeyboardFocus" Handler="gotFocusSuccess" />
        <EventSetter Event="LostKeyboardFocus" Handler="lostFocus" />
    </Style>
    <!--Style For TextBox Success End Here-->
    <!--Style For TextBox Danger Start Here-->
    <Style TargetType="PasswordBox" BasedOn="{StaticResource passwordbox}" x:Key="passwordboxDanger">
        <Setter Property="BorderBrush" Value="#d9534f"/>
        <EventSetter Event="GotKeyboardFocus" Handler="gotFocusDanger" />
        <EventSetter Event="LostKeyboardFocus" Handler="lostFocus" />
    </Style>
    <!--Style For TextBox Danger End Here-->
    <!--Style For TextBox Warning Start Here-->
    <Style TargetType="PasswordBox" BasedOn="{StaticResource passwordbox}" x:Key="passwordboxWarning">
        <Setter Property="BorderBrush" Value="#f0ad4e"/>
        <EventSetter Event="GotKeyboardFocus" Handler="gotFocusWarning" />
        <EventSetter Event="LostKeyboardFocus" Handler="lostFocus" />
    </Style>
    <!--Style For TextBox Warning End Here-->
    <!--Style For TextBox Default Start Here-->
    <Style TargetType="PasswordBox" BasedOn="{StaticResource passwordbox}" x:Key="passwordboxDefault">
        <Setter Property="BorderBrush" Value="#555"/>
        <EventSetter Event="GotKeyboardFocus" Handler="gotFocusDefault" />
        <EventSetter Event="LostKeyboardFocus" Handler="lostFocus" />
    </Style>
    <!--Style For TextBox Default End Here-->
    <!--End-->


   <!--.............................................................Progress Bar Basic Start Here............................................................................-->
    <!-- Style for Linear Gradient Progress Bar Start Here-->
    <Style TargetType="Border" x:Key="styleShadowTop">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,0.5">
                    <GradientStop Color="#dddddd" Offset="0.25"></GradientStop>
                    <GradientStop Color="#F5F5F5" Offset="0.75"></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Border" x:Key="styleShadowTopColor">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,0.5">
                    <GradientStop Color="#76b9f4" Offset="0.25"></GradientStop>
                    <GradientStop Color="{Binding Path=Background,RelativeSource={RelativeSource Self} }" Offset="0.75"></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Style for Linear Gradient Progress Bar Ends Here-->
    <!-- Style for Progress Bar Start Here -->
    <Style  x:Key="progressbar" TargetType="ProgressBar">
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="Width" Value="500"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="lib:CustomProgressBar" >
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" x:Name="grid">
                        <Border x:Name="backBar" HorizontalAlignment="Left" Height="{TemplateBinding Height}"   VerticalAlignment="Top" Width="{TemplateBinding Width}"  BorderBrush="#ddd"  ClipToBounds="True" CornerRadius="3" Style="{StaticResource styleShadowTop}" >
                            <Border   Height="{TemplateBinding Height}" Width="{TemplateBinding widthValue}" x:Name="progressValue"   HorizontalAlignment="Left" VerticalAlignment="Top" CornerRadius="3,0,0,3" Style="{StaticResource styleShadowTopColor}" Background="{TemplateBinding Background}"></Border>
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Style For Progress Bar Ends Here-->
    <!--Style For Primary Progress Bar Start Here-->
    <Style BasedOn="{StaticResource progressbar}" TargetType="ProgressBar" x:Key="progressBarPrimary">
        <Setter Property="Background" Value="#428bca"/>
    </Style>
    <!--Style For Primary Progress Bar End Here-->
    <!--Style For Success Progress Bar Start Here-->
    <Style BasedOn="{StaticResource progressbar}" TargetType="ProgressBar" x:Key="progressBarSuccess">
        <Setter Property="Background" Value="#5cb85c"/>
    </Style>
    <!--Style For Success Progress Bar End Here-->
    <!--Style For Warning Progress Bar Start Here-->
    <Style BasedOn="{StaticResource progressbar}" TargetType="ProgressBar" x:Key="progressBarWarning">
        <Setter Property="Background" Value="#f0ad4e"/>
    </Style>
    <!--Style For Warning Progress Bar End Here-->
    <!--Style For Danger Progress Bar Start Here-->
    <Style BasedOn="{StaticResource progressbar}" TargetType="ProgressBar" x:Key="progressBarDanger">
        <Setter Property="Background" Value="#d9534f"/>
    </Style>
    <!--Style For Danger Progress Bar End Here-->
    <!-- Style For Info Progress Bar Start Here -->
    <Style BasedOn="{StaticResource progressbar}" TargetType="ProgressBar" x:Key="progressBarInfo">
        <Setter Property="Background" Value="#5bc0de"/>
    </Style>
    <!--Style For Info Progress Bar End Here-->
    <!--....................................................Progress Bar Basic End Here..................................................................................-->
    <!--....................................................Progress Bar Animation Start Here............................................................................-->
    <!--Animation Code Start Here-->
    <Style TargetType="Border" x:Key="animation">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop x:Name="darkColor" Color="Red" Offset="0"></GradientStop>
                    <GradientStop x:Name="lightColor" Color="Green" Offset="1"></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <!-- <Style.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard RepeatBehavior="Forever">
                        <ColorAnimation Storyboard.TargetName="darkColor" Storyboard.TargetProperty="Color" From="Red" To="Green" Duration="0:0:1" BeginTime="0:0:0"></ColorAnimation>
                        <ColorAnimation Storyboard.TargetName="lightColor" Storyboard.TargetProperty="Color" From="Green" To="Red"
                   </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>-->
    </Style>
    <!--Animation Code End Here-->
    <!--Animated Progress Bar Start Here-->
    <!-- Style for Progress Bar Start Here -->
    <Style  x:Key="progressbarAnimated" TargetType="ProgressBar">
        <Setter Property="Height" Value="10"></Setter>
        <Setter Property="Width" Value="500"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="lib:CustomProgressBar" >
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" x:Name="grid">
                        <Border x:Name="backBar" HorizontalAlignment="Left" Height="{TemplateBinding Height}"   VerticalAlignment="Top" Width="{TemplateBinding Width}"  BorderBrush="#777"  ClipToBounds="True" CornerRadius="3" Style="{StaticResource styleShadowTop}" >
                            <Border  Height="{TemplateBinding Height}" Width="{TemplateBinding widthValue}"   HorizontalAlignment="Left" VerticalAlignment="Top" CornerRadius="3,0,0,3" Style="{StaticResource animation}" Background="{TemplateBinding Background}"  Loaded="animatedBorderLoaded" >
                                <Border   Height="{TemplateBinding Height}" Width="{TemplateBinding widthValue}"   HorizontalAlignment="Left" VerticalAlignment="Top" CornerRadius="3,0,0,3" Style="{StaticResource animation}" >
                                    <Border.Background>
                                        <DrawingBrush TileMode="Tile" Stretch="None" Viewbox="0,0,1,1" Viewport="0,0,25,25" ViewportUnits="Absolute">
                                            <DrawingBrush.RelativeTransform>
                                                <TranslateTransform X="0" Y="0" />
                                            </DrawingBrush.RelativeTransform>
                                            <DrawingBrush.Drawing>
                                                <GeometryDrawing Brush="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Geometry="M41,0 54,0 13,80 0,80 Z"  />
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Border.Background>
                                    <Border.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(Border.Background).(DrawingBrush.RelativeTransform).(TranslateTransform.X)" From="0" To=".25" RepeatBehavior="Forever" Duration="0:0:4.5" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Border.Triggers>
                                </Border>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Style For Progress Bar Ends Here-->
    <!--Style For Progress Bar Primary Animation Start Here-->
    <Style BasedOn="{StaticResource progressbarAnimated}" TargetType="ProgressBar" x:Key="progressBarAnimatedPrimary">
        <Setter Property="Background" Value="#428bca"/>
    </Style>
    <!--Style For Progress Bar Primary Animation End Here-->
    <!--Style For Progress Bar Info Animation Start Here-->
    <Style BasedOn="{StaticResource progressbarAnimated}" TargetType="ProgressBar" x:Key="progressBarAnimatedInfo">
        <Setter Property="Background" Value="#5bc0de"/>
    </Style>
    <!--Style For Progress Bar Info Animation End Here-->
    <!--Style For Progress Bar Warning Animation Start Here-->
    <Style BasedOn="{StaticResource progressbarAnimated}" TargetType="ProgressBar" x:Key="progressBarAnimatedWarning">
        <Setter Property="Background" Value="#f0ad4e"/>
    </Style>
    <!--Style For Progress Bar Warning Animation End Here-->
    <!--Style For Progress Bar Success Animation Start Here-->
    <Style BasedOn="{StaticResource progressbarAnimated}" TargetType="ProgressBar" x:Key="progressBarAnimatedSuccess">
        <Setter Property="Background" Value="#5cb85c"/>
    </Style>
    <!--Style For Progress Bar Success Animation End Here-->
    <!--Style For Progress Bar Danger Animation Start Here-->
    <Style BasedOn="{StaticResource progressbarAnimated}" TargetType="ProgressBar" x:Key="progressBarAnimatedDanger">
        <Setter Property="Background" Value="#d9534f"/>
    </Style>
    <!--Style For Progress Bar Danger Animation End Here-->
    <!--...................................................................Animated Progress Bar End Here.........................................................-->
    <!--...................................................................Stripped Progress Bar Start Here....................................................................-->
    <!--Style For Stripped Progress Bar Start Here-->
    <Style  x:Key="progressbarStripped" TargetType="ProgressBar">
        <Setter Property="Height" Value="10"></Setter>
        <Setter Property="Width" Value="500"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="lib:CustomProgressBar" >
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" x:Name="grid">
                        <Border x:Name="backBar" HorizontalAlignment="Left" Height="{TemplateBinding Height}"   VerticalAlignment="Top" Width="{TemplateBinding Width}"  BorderBrush="#777"  ClipToBounds="True" CornerRadius="3" Style="{StaticResource styleShadowTop}" >
                            <Border  Height="{TemplateBinding Height}" Width="{TemplateBinding widthValue}"   HorizontalAlignment="Left" VerticalAlignment="Top" CornerRadius="3,0,0,3" Style="{StaticResource animation}" Background="{TemplateBinding Background}"  Loaded="animatedBorderLoaded" >
                                <Border   Height="{TemplateBinding Height}" Width="{TemplateBinding widthValue}"   HorizontalAlignment="Left" VerticalAlignment="Top" CornerRadius="3,0,0,3" Style="{StaticResource animation}" >
                                    <Border.Background>
                                        <DrawingBrush TileMode="Tile" Stretch="None" Viewbox="0,0,1,1" Viewport="0,0,25,25" ViewportUnits="Absolute">
                                            <DrawingBrush.RelativeTransform>
                                                <TranslateTransform X="0" Y="0" />
                                            </DrawingBrush.RelativeTransform>
                                            <DrawingBrush.Drawing>
                                                <GeometryDrawing Brush="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Geometry="M41,0 54,0 13,80 0,80 Z"  />
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Style For Stripped Progress Bar Ends Here-->
    <!--Style For Progress Bar Primary Stripped Start Here-->
    <Style BasedOn="{StaticResource progressbarStripped}" TargetType="ProgressBar" x:Key="progressBarStrippedPrimary">
        <Setter Property="Background" Value="#428bca"/>
    </Style>
    <!--Style For Progress Bar Primary Stripped End Here-->
    <!--Style For Progress Bar Info Stripped Start Here-->
    <Style BasedOn="{StaticResource progressbarStripped}" TargetType="ProgressBar" x:Key="progressBarStrippedInfo">
        <Setter Property="Background" Value="#5bc0de"/>
    </Style>
    <!--Style For Progress Bar Info Stripped End Here-->
    <!--Style For Progress Bar Warning Stripped Start Here-->
    <Style BasedOn="{StaticResource progressbarStripped}" TargetType="ProgressBar" x:Key="progressBarStrippedWarning">
        <Setter Property="Background" Value="#f0ad4e"/>
    </Style>
    <!--Style For Progress Bar Warning Stripped End Here-->
    <!--Style For Progress Bar Success Stripped Start Here-->
    <Style BasedOn="{StaticResource progressbarStripped}" TargetType="ProgressBar" x:Key="progressBarStrippedSuccess">
        <Setter Property="Background" Value="#5cb85c"/>
    </Style>
    <!--Style For Progress Bar Success Stripped End Here-->
    <!--Style For Progress Bar Danger Stripped Start Here-->
    <Style BasedOn="{StaticResource progressbarStripped}" TargetType="ProgressBar" x:Key="progressBarStrippedDanger">
        <Setter Property="Background" Value="#d9534f"/>
    </Style>
    <!--Style For Progress Bar Danger Stripped End Here-->
    <!--.................................................................................Stripped Progress Bar End Here.........................................................................-->
    <!--End-->
    
    
    <!--Slider-->
    <!--Style For Repeat Button Start Here-->
    <Style  TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Style For Repeat Button End Here-->
    <!--Style For Basic Slider Circle Start Here-->
    <Style  TargetType="{x:Type Slider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Background}" BorderBrush="{DynamicResource Border}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource basiccircle}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="basiccircle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse  Stroke="#FF000000" Height="10" Width="10" Fill="#222"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Background" Color="Black"/>
    <LinearGradientBrush x:Key="Border" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF333333" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>
    <!--Style For Basic Slider Circle End Here-->
    <!--Style For Primary Slider  Circle Start Here-->
    <Style  TargetType="{x:Type Slider}" x:Key="sliderPrimary">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Backgroundcircleprimary}" BorderBrush="{DynamicResource Bordercircleprimary}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource primarycircle}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="primarycircle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse  Stroke="#FF428bca" Height="10" Width="10" Fill="#428bca"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Backgroundcircleprimary" Color="#428bca"/>
    <LinearGradientBrush x:Key="Bordercircleprimary" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF428bca" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>
    <!--Style For Primary Slider  Circle  End Here-->
    <!--Style For Danger Slider  Circle Start Here-->
    <Style  TargetType="{x:Type Slider}" x:Key="sliderDanger">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Backgroundcircledanger}" BorderBrush="{DynamicResource Bordercircledanger}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource dangercircle}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="dangercircle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse  Stroke="#FFd9534f" Height="10" Width="10" Fill="#d9534f"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Backgroundcircledanger" Color="#d9534f"/>
    <LinearGradientBrush x:Key="Bordercircledanger" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#d9534f" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>
    <!--Style For Danger Slider Circle  End Here-->
    <!--Style For Success Slider  Circle Start Here-->
    <Style  TargetType="{x:Type Slider}" x:Key="sliderSuccess">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Backgroundcirclesuccess}" BorderBrush="{DynamicResource Bordercirclesuccess}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource successcircle}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="successcircle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse  Stroke="#FF5cb85c" Height="10" Width="10" Fill="#5cb85c"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Backgroundcirclesuccess" Color="#5cb85c"/>
    <LinearGradientBrush x:Key="Bordercirclesuccess" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#5cb85c" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>
    <!--Style For Success  Circle Slider End Here-->
    <!--Style For Basic Slider Horizontol Rect Start Here-->
    <Style  TargetType="{x:Type Slider}" x:Key="sliderHorizontalBasic">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Backgroundhorizontalbasic}" BorderBrush="{DynamicResource Borderhorizontalbasic}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource basichorizontal}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="basichorizontal">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle  Stroke="#FF222222" Height="10" Width="25" Fill="#222" RadiusX="3" RadiusY="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Backgroundhorizontalbasic" Color="Black"/>
    <LinearGradientBrush x:Key="Borderhorizontalbasic" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#222" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>
    <!--Style For Basic Slider Horizontal Rect End Here-->
    <!--Style For Primary Slider Horizontol Rect Start Here-->
    <Style  TargetType="{x:Type Slider}" x:Key="sliderHorizontalPrimary">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Backgroundhorizontalprimary}" BorderBrush="{DynamicResource Borderhorizontalprimary}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource primaryhorizontal}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="primaryhorizontal">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle  Stroke="#FF428bca" Height="10" Width="25" Fill="#428bca" RadiusX="3" RadiusY="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Backgroundhorizontalprimary" Color="#428bca"/>
    <LinearGradientBrush x:Key="Borderhorizontalprimary" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#428bca" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>
    <!--Style For Primary Slider Horizontal Rect End Here-->
    <!--Style For Danger Slider Horizontol Rect Start Here-->
    <Style  TargetType="{x:Type Slider}" x:Key="sliderHorizontalDanger">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Backgroundhorizontaldanger}" BorderBrush="{DynamicResource Borderhorizontaldanger}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource dangerhorizontal}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="dangerhorizontal">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle  Stroke="#FFd9534f" Height="10" Width="25" Fill="#d9534f" RadiusX="3" RadiusY="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Backgroundhorizontaldanger" Color="#d9534f"/>
    <LinearGradientBrush x:Key="Borderhorizontaldanger" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#d9534f" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>
    <!--Style For Danger Slider Horizontal Rect End Here-->
    <!--Style For Success Slider Horizontol Rect Start Here-->
    <Style  TargetType="{x:Type Slider}" x:Key="sliderHorizontalSuccess">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Backgroundhorizontalsuccess}" BorderBrush="{DynamicResource Borderhorizontalsuccess}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource successhorizontal}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="successhorizontal">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle  Stroke="#FF5cb85c" Height="10" Width="25" Fill="#5cb85c" RadiusX="3" RadiusY="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Backgroundhorizontalsuccess" Color="#5cb85c"/>
    <LinearGradientBrush x:Key="Borderhorizontalsuccess" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#5cb85c" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>
    <!--Style For Success Slider Horizontal Rect End Here-->
    <!--Style For Basic Slider Vertical Rect Start Here-->
    <Style  TargetType="{x:Type Slider}" x:Key="sliderVerticalBasic">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Backgroundverticalbasic}" BorderBrush="{DynamicResource Borderverticalbasic}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource basicvertical}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="basicvertical">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle  Stroke="#FF222222" Height="25" Width="10" Fill="#222" RadiusX="3" RadiusY="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Backgroundverticalbasic" Color="#222"/>
    <LinearGradientBrush x:Key="Borderverticalbasic" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#222" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>
    <!--Style For Basic Slider Vertical Rect End Here-->
    <!--Style For Primary Slider Vertical Rect Start Here-->
    <Style  TargetType="{x:Type Slider}" x:Key="sliderVerticalPrimary">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Backgroundverticalprimary}" BorderBrush="{DynamicResource Borderverticalprimary}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource primaryvertical}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="primaryvertical">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle  Stroke="#FF428bca" Height="25" Width="10" Fill="#428bca" RadiusX="3" RadiusY="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Backgroundverticalprimary" Color="#428bca"/>
    <LinearGradientBrush x:Key="Borderverticalprimary" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#428bca" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>
    <!--Style For Primary Slider Vertical Rect End Here-->
    <!--Style For Danger Slider Vertical Rect Start Here-->
    <Style  TargetType="{x:Type Slider}" x:Key="sliderVerticalDanger">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Backgroundverticaldanger}" BorderBrush="{DynamicResource Borderverticaldanger}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource dangervertical}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="dangervertical">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle  Stroke="#FFd9534f" Height="25" Width="10" Fill="#d9534f" RadiusX="3" RadiusY="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Backgroundverticaldanger" Color="#d9534f"/>
    <LinearGradientBrush x:Key="Borderverticaldanger" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#d9534f" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>
    <!--Style For Danger Slider Vertical Rect End Here-->
    <!--Style For Success Slider Vertical Rect Start Here-->
    <Style  TargetType="{x:Type Slider}" x:Key="sliderVerticalSuccess">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Background="{DynamicResource Backgroundverticalsuccess}" BorderBrush="{DynamicResource Borderverticalsuccess}" BorderThickness="1" CornerRadius="1" Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                <Canvas Margin="-6,-1">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
                                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                                        StrokeThickness="1.0"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{DynamicResource successvertical}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type Thumb}" x:Key="successvertical">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle  Stroke="#FF5cb85c" Height="25" Width="10" Fill="#5cb85c" RadiusX="3" RadiusY="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Backgroundverticalsuccess" Color="#5cb85c"/>
    <LinearGradientBrush x:Key="Borderverticalsuccess" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#5cb85c" Offset="0.1"/>
        <GradientStop Color="White" Offset=".9"/>
    </LinearGradientBrush>

    <!--Style For Success Slider Vertical Rect End Here-->
    <!--End-->
    
    
    <!--TextBox-->
    <!-- Style For TextBox Start Here-->
    <Style x:Key="textbox" TargetType="{x:Type TextBox}">

        <Setter Property="Width" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Width="{TemplateBinding Width}" Height="33">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Height="{TemplateBinding Height}"  Width="{TemplateBinding Width}" CornerRadius="3" Background="White" x:Name="border"  >
                            <Grid>
                                <TextBox Text="{TemplateBinding Text}" x:Name="textSource" Background="Transparent" Panel.ZIndex="2"  Height="{TemplateBinding Height}"  Width="{TemplateBinding Width}" BorderBrush="Transparent" BorderThickness="0" FontSize="15"  FontFamily="Segoe UI " Foreground="Gray" VerticalAlignment="Center" Focusable="True" />

                                <TextBox Text="{TemplateBinding Tag}" Background="Transparent" Panel.ZIndex="1" Height="{TemplateBinding Height}"  Width="{TemplateBinding Width}" BorderBrush="Transparent" BorderThickness="0" FontSize="14"  FontFamily="Segoe UI" VerticalAlignment="Center">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                    <Setter Property="Foreground" Value="DarkGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Style For TextBox  End Here-->
    <!--Style For TextBox Primary Start Here-->
    <Style TargetType="TextBox" BasedOn="{StaticResource textbox}" x:Key="textboxPrimaryText">
        <Setter Property="BorderBrush" Value="#428bca"/>
        <EventSetter Event="GotKeyboardFocus" Handler="gotFocusPrimaryText" />
        <EventSetter Event="LostKeyboardFocus" Handler="lostFocusText" />

    </Style>
    <!--Style For TextBox Primary End Here-->
    <!-- Style For TextBox Of Success Start Here-->
    <Style TargetType="TextBox" BasedOn="{StaticResource textbox}" x:Key="textboxSuccessText">
        <Setter Property="BorderBrush" Value="#5cb85c"/>
        <EventSetter Event="GotKeyboardFocus" Handler="gotFocusSuccess" />
        <EventSetter Event="LostKeyboardFocus" Handler="lostFocusText" />
    </Style>
    <!--Style For TextBox Success End Here-->
    <!--Style For TextBox Danger Start Here-->
    <Style TargetType="TextBox" BasedOn="{StaticResource textbox}" x:Key="textboxDangerText">
        <Setter Property="BorderBrush" Value="#d9534f"/>
        <EventSetter Event="GotKeyboardFocus" Handler="gotFocusDanger" />
        <EventSetter Event="LostKeyboardFocus" Handler="lostFocusText" />
    </Style>
    <!--Style For TextBox Danger End Here-->
    <!--Style For TextBox Warning Start Here-->
    <Style TargetType="TextBox" BasedOn="{StaticResource textbox}" x:Key="textboxWarningText">
        <Setter Property="BorderBrush" Value="#f0ad4e"/>
        <EventSetter Event="GotKeyboardFocus" Handler="gotFocusWarning" />
        <EventSetter Event="LostKeyboardFocus" Handler="lostFocusText" />
    </Style>
    <!--Style For TextBox Warning End Here-->
    <!--Style For TextBox Default Start Here-->
    <Style TargetType="TextBox" BasedOn="{StaticResource textbox}" x:Key="textboxDefaultText">
        <Setter Property="BorderBrush" Value="#555"/>
        <EventSetter Event="GotKeyboardFocus" Handler="gotFocusDefault" />
        <EventSetter Event="LostKeyboardFocus" Handler="lostFocusText" />
    </Style>
    <!--Style For TextBox Default End Here-->
    <!--End-->
    
    
    <!--ToolBox-->
    <Style TargetType="Button" x:Key="button_style">
        <Setter Property="Width" Value="75" />
        <Setter Property="Foreground" Value="#CCCCCC"/>
        <Setter Property="Height" Value="{Binding Path=Height,RelativeSource={RelativeSource AncestorType=ToolBar}}"/>
        <Setter Property="Background" Value="{Binding Path=Background,RelativeSource={RelativeSource AncestorType=ToolBar}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <EventSetter Event="Button.PreviewMouseLeftButtonDown" Handler="mouse_leftdown"/>
        <EventSetter Event="Button.PreviewMouseLeftButtonUp" Handler="mouse_leftup"/>
        <EventSetter Event="Button.MouseEnter" Handler="mouse_enter"/>
        <EventSetter Event="Button.MouseLeave" Handler="mouse_leave"/>
    </Style>
    <Style TargetType="ToolTip" x:Key="tooltip_customize">
        <Setter Property="Background" Value="#222222"/>
    </Style>
    <Style TargetType="Separator" x:Key="seprator_style">
        <Setter Property="Background" Value="{Binding Path=Background,RelativeSource={RelativeSource AncestorType=ToolBar}}"/>
    </Style>
    <Style TargetType="ToolBar" x:Key="toolbar_style">
        <Setter Property="Background" Value="{Binding Path=Background,RelativeSource={RelativeSource AncestorType=ToolBar}}"/>
        <Setter Property="Foreground" Value="#aaaaaa"/>
        <Setter Property="Height" Value="30"/>
    </Style>
    <!--End-->
    
    
    <!--Scroll Bar-->
    <!--Scrollbar Thumbs-->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ScrollBars-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#999"/>

            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Foreground" Value="#777"/>

            </Trigger>
        </Style.Triggers>
        <EventSetter Event="MouseDown" Handler="mousedownScrollbar"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#ccc" />
        <Setter Property="Background" Value="#ddd" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="10" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}">
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End-->
    
    
    <!--Modal-->
    <!--Style For Main Heading Start here-->
    <Style TargetType="Label" x:Key="h1">
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Foreground" Value="#222222"/>
    </Style>
    <Style TargetType="Label" x:Key="h2" BasedOn="{StaticResource h1}">
        <Setter Property="FontSize" Value="30"/>
    </Style>
    <Style TargetType="Label" x:Key="h3"  BasedOn="{StaticResource h1}">
        <Setter Property="FontSize" Value="24"/>
    </Style>
    <Style TargetType="Label" x:Key="h4" BasedOn="{StaticResource h1}">
        <Setter Property="FontSize" Value="18"/>

    </Style>
    <Style TargetType="Label" x:Key="h5" BasedOn="{StaticResource h1}">
        <Setter Property="FontSize" Value="15"/>
    </Style>
    <Style TargetType="Label" x:Key="h6" BasedOn="{StaticResource h1}">
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <!--Style For Main Heading End Here-->
    <!--Style For Secondry Heading Start Here-->
    <Style TargetType="Label" x:Key="secondryh1">
        <Setter Property="Foreground" Value="#999999"></Setter>
        <Setter Property="FontSize" Value="30"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="secondryh2" BasedOn="{StaticResource secondryh1}">
        <Setter Property="FontSize" Value="25"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="secondryh3" BasedOn="{StaticResource secondryh1}">
        <Setter Property="FontSize" Value="20"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="secondryh4" BasedOn="{StaticResource secondryh1}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="secondryh5" BasedOn="{StaticResource secondryh1}">
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>
    <Style TargetType="Label" x:Key="secondryh6" BasedOn="{StaticResource secondryh1}">
        <Setter Property="FontSize" Value="10"></Setter>
    </Style>
    <!--Style For Secondry Heading End Here-->
    <!--Style for Label Start Here-->
    <Style TargetType="Label" x:Key="Label">
        <Setter Property="Width" Value="90" ></Setter>
        <Setter Property="Height" Value="28"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Grid>
                        <Border CornerRadius="3" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" >
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" >
                                <TextBlock.Foreground>
                                    White
                                </TextBlock.Foreground>
                            </ContentPresenter>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <EventSetter Event="MouseEnter" Handler="mouseenterLabel"></EventSetter>
        <EventSetter Event="MouseLeave" Handler="mouseleaveLabel"></EventSetter>
    </Style>
    <!--Style For Label Ends Here-->
    <!--Style For Label Primary Start Here-->
    <Style TargetType="Label" BasedOn="{StaticResource Label}" x:Key="primaryLabel">
        <Setter Property="Background" Value="#428bca"></Setter>
        <Setter Property="Content" Value="Primary Label"></Setter>
    </Style>
    <!--Style For Label Primary End Here-->
    <!--Style For Label Success Start Here-->
    <Style TargetType="Label" BasedOn="{StaticResource Label}" x:Key="successLabel">
        <Setter Property="Background" Value="#5cb85c"></Setter>
        <Setter Property="Content" Value="Success Label"></Setter>
    </Style>
    <!--Style For Label Success End Here-->
    <!--Style For Label Warning Start Here-->
    <Style TargetType="Label" BasedOn="{StaticResource Label}" x:Key="warningLabel">
        <Setter Property="Background" Value="#f0ad4e"></Setter>
        <Setter Property="Content" Value="Warning Label"></Setter>
    </Style>
    <!--Style For Label Warning End Here-->
    <!--Style For Label Danger Start Here-->
    <Style TargetType="Label" BasedOn="{StaticResource Label}" x:Key="dangerLabel">
        <Setter Property="Background" Value="#d9534f"></Setter>
        <Setter Property="Content" Value="Danger Label"></Setter>
    </Style>
    <!--Style For Label Danger End Here-->
    <!--Style For Label Default Start Here-->
    <Style TargetType="Label" BasedOn="{StaticResource Label}" x:Key="defaultLabel">
        <Setter Property="Background" Value="#999"></Setter>
        <Setter Property="Content" Value="Default Label"></Setter>
    </Style>
    <!--Style For Label Default End Here-->
    <!--Control Template For Label Basic Start Here-->
    <Style TargetType="Label" BasedOn="{StaticResource Label}">
        <Setter Property="Background" Value="Black"></Setter>
        <Setter Property="Content" Value="Label"></Setter>

    </Style>
    <!--Control Template For Label Basic End Here-->
    <!--Style for ButtonStyle ends here-->
    <!--Control Template for button start here-->
    <Style TargetType="Button" x:Key="buttonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}" Height="35">
                        <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" CornerRadius="3" x:Name="myButton">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <TextBlock.Foreground>
                                    White
                                </TextBlock.Foreground>
                                <TextBlock.FontSize>13</TextBlock.FontSize>

                            </ContentPresenter>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <EventSetter Event="Button.PreviewMouseLeftButtonDown" Handler="ButtonDown" />
        <EventSetter Event="Button.PreviewMouseLeftButtonUp" Handler="ButtonUp" />
        <EventSetter Event="Button.MouseEnter" Handler="ButtonEnter" />
        <EventSetter Event="Button.MouseLeave" Handler="ButtonLeave"/>
        <Setter Property="FontFamily" Value="Helvetica Neue" />
    </Style>
    <Style BasedOn="{StaticResource buttonStyle}" TargetType="Button" x:Key="buttonPrimary">
        <Setter Property="Background" Value="#428bca" />
    </Style>
    <Style BasedOn="{StaticResource buttonStyle}" TargetType="Button" x:Key="buttonInfo">
        <Setter Property="Background" Value="#5bc0de" />
    </Style>
    <Style BasedOn="{StaticResource buttonStyle}" TargetType="Button" x:Key="buttonSuccess">
        <Setter Property="Background" Value="#5cb85c" />
    </Style>
    <Style BasedOn="{StaticResource buttonStyle}" TargetType="Button" x:Key="buttonWarning">
        <Setter Property="Background" Value="#f0ad4e" />
    </Style>
    <Style BasedOn="{StaticResource buttonStyle}" TargetType="Button">
        <Setter Property="Background" Value="Black" />
    </Style>
    <Style BasedOn="{StaticResource buttonStyle}" TargetType="Button" x:Key="buttonDanger">
        <Setter Property="Background" Value="#d9534f" />
    </Style>
    <!--Region for button ends here-->
    <!--End-->
</ResourceDictionary>